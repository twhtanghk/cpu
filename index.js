// Generated by CoffeeScript 1.12.1
(function() {
  var Promise, _, connect, content, dir, eventToPromise, fs, glob, mqtt, path, pub, publish, temp;

  Promise = require('bluebird');

  glob = Promise.promisify(require('glob'));

  path = require('path');

  fs = require('fs');

  _ = require('lodash');

  mqtt = require('mqtt');

  eventToPromise = require('event-to-promise');

  dir = path.dirname(process.env.DEVICE);

  content = function(file) {
    return fs.readFileSync(file, 'ascii').trim();
  };

  temp = function() {
    return glob(process.env.DEVICE).map(function(file) {
      return path.basename(file).split('_')[0];
    }).map(function(file) {
      var input, label, ret;
      ret = {};
      label = content(path.join(dir, file + "_label"));
      input = parseInt(content(path.join(dir, file + "_input"))) / 1000;
      ret[label] = input;
      return ret;
    }).reduce(function(res, temp) {
      return _.extend(res, temp);
    }).then(function(temp) {
      return _.pick(temp, 'CPUTIN', 'SYSTIN');
    });
  };

  connect = function(url) {
    var client;
    client = mqtt.connect(url);
    return eventToPromise.multi(client, ['connect'], ['reconnect', 'close', 'offline', 'error']).then(function() {
      return client;
    });
  };

  publish = function(url, topic, msg, opts) {
    if (opts == null) {
      opts = {};
    }
    return connect(url).then(function(client) {
      client.subscribe(topic);
      return client.publish(topic, msg, opts);
    });
  };

  pub = function() {
    var mqttpub;
    mqttpub = function() {
      return temp().then(function(temp) {
        return publish(process.env.URL, process.env.TOPIC, JSON.stringify(temp));
      })["catch"](console.log);
    };
    return setInterval(mqttpub, process.env.INTERVAL);
  };

  module.exports = {
    temp: temp,
    pub: pub
  };

}).call(this);
